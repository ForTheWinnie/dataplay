{"ast":null,"code":"var _jsxFileName = \"/Users/winnie/Documents/dataplay/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport data from \"./annotatedData.geo.json\";\nimport Map from \"./components/Map/Map\";\nimport { Chart } from \"react-google-charts\";\nimport { accidentData } from \"./simplerNeighborhoodData.js\";\n\nfunction App() {\n  const [property, setProperty] = useState(\"total\"); // setting default year for map filter\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"Car crashes in Washington D.C. neighborhoods\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"(2010-2014)\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Click on the neighborhoods to zoom in and see the number of car crashes. Click again to zoom out.\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Filter by year\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: property,\n    onChange: event => setProperty(event.target.value),\n    className: \"mapFilter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Total (5 years)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2014\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"2014\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2013\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"2013\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2012\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"2012\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2011\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"2011\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2010\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"2010\")), /*#__PURE__*/React.createElement(Map, {\n    data: data,\n    property: property,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Bar chart\"), /*#__PURE__*/React.createElement(Chart, {\n    chartType: \"Bar\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, \"Loading Chart\"),\n    data: accidentData,\n    options: {\n      height: 350,\n      vAxis: {\n        title: \"Neighborhood\",\n        minValue: 1\n      },\n      hAxis: {\n        title: \"Car Crashes\",\n        ticks: [0, 1, 2, 3, 4, 5, 6]\n      },\n      bars: \"horizontal\",\n      axes: {\n        y: {\n          0: {\n            side: \"right\"\n          }\n        }\n      }\n    },\n    rootProps: {\n      \"data-testid\": \"1\"\n    },\n    chartWrapperParams: {\n      view: {\n        rows: [1 - 1]\n      }\n    } // display Naylor Gardens as default neighborhood\n    ,\n    controls: [{\n      controlEvents: [{\n        eventName: \"statechange\"\n      }],\n      controlType: \"CategoryFilter\",\n      options: {\n        filterColumnIndex: 0,\n        // filter by neighborhood\n        ui: {\n          labelStacking: \"vertical\",\n          label: \"Filter by neighborhood using this drop-down\",\n          allowTyping: false,\n          allowMultiple: false\n        }\n      }\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/winnie/Documents/dataplay/src/App.js"],"names":["React","useState","data","Map","Chart","accidentData","App","property","setProperty","event","target","value","height","vAxis","title","minValue","hAxis","ticks","bars","axes","y","side","view","rows","controlEvents","eventName","controlType","options","filterColumnIndex","ui","labelStacking","label","allowTyping","allowMultiple"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport data from \"./annotatedData.geo.json\";\nimport Map from \"./components/Map/Map\";\nimport { Chart } from \"react-google-charts\";\nimport { accidentData } from \"./simplerNeighborhoodData.js\";\n\nfunction App() {\n  const [property, setProperty] = useState(\"total\"); // setting default year for map filter\n  return (\n    <>\n      <h1>Car crashes in Washington D.C. neighborhoods</h1>\n      <h2>(2010-2014)</h2>\n      <p>Click on the neighborhoods to zoom in and see the number of car crashes. Click again to zoom out.</p>\n      <h3>Filter by year</h3>\n      <select\n        value={property}\n        onChange={event => setProperty(event.target.value)} className=\"mapFilter\">\n        <option value=\"total\">Total (5 years)</option>\n        <option value=\"2014\">2014</option>\n        <option value=\"2013\">2013</option>\n        <option value=\"2012\">2012</option>\n        <option value=\"2011\">2011</option>\n        <option value=\"2010\">2010</option>\n      </select>\n      <Map data={data} property={property} />\n      \n      <h2>Bar chart</h2>\n      <Chart\n        chartType=\"Bar\"\n        loader={<div>Loading Chart</div>}\n        data={accidentData}\n        options={{\n          height: 350,\n          vAxis: {\n            title: \"Neighborhood\",\n            minValue: 1\n          },\n          hAxis: {\n            title: \"Car Crashes\",\n            ticks: [0, 1, 2, 3, 4, 5, 6]\n          },\n          bars: \"horizontal\",\n          axes: {\n            y: {\n              0: { side: \"right\" },\n            },\n          },\n        }}\n        rootProps={{ \"data-testid\": \"1\" }}\n        chartWrapperParams={{ view: { rows: [1-1] } }} // display Naylor Gardens as default neighborhood\n        controls={[\n          {\n            controlEvents: [\n              {\n                eventName: \"statechange\",\n              },\n            ],\n            controlType: \"CategoryFilter\",\n            options: {\n              filterColumnIndex: 0, // filter by neighborhood\n              ui: {\n                labelStacking: \"vertical\",\n                label: \"Filter by neighborhood using this drop-down\",\n                allowTyping: false,\n                allowMultiple: false,\n              },\n            },\n          },\n        ]}\n      />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}